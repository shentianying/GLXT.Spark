<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GLXT.Spark</name>
    </assembly>
    <members>
        <member name="T:GLXT.Spark.Controllers.GGGL.AdvertisementController">
            <summary>
            广告管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.GetAdvertisementPaging(GLXT.Spark.ViewModel.GGGL.AdvertisementSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.InitAdvertisement">
            <summary>
            初始化编辑页面
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.GetAdvertisementById(System.Int32)">
            <summary>
            编辑页面 根据id获取广告信息
            </summary>
            <param name="id">广告id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.AddAdvertisement(GLXT.Spark.Entity.GGGL.Advertisement)">
            <summary>
            添加广告
            </summary>
            <param name="advertisement">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.PutAdvertisement(GLXT.Spark.Entity.GGGL.Advertisement)">
            <summary>
            更新
            </summary>
            <param name="advertisement"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.GGGL.AdvertisementController.DeleteAdvertisement(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">广告id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.HDGL.AcitivityController">
            <summary>
            商场活动
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.GetAcitivityPaging(GLXT.Spark.ViewModel.HDGL.AcitivitySearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.InitAcitivity">
            <summary>
            初始化编辑页面
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.GetAcitivityById(System.Int32)">
            <summary>
            编辑页面 根据id获取商场活动信息
            </summary>
            <param name="id">商场活动id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.AddAcitivity(GLXT.Spark.Entity.HDGL.Acitivity)">
            <summary>
            添加商场活动
            </summary>
            <param name="acitivity">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.PutAcitivity(GLXT.Spark.Entity.HDGL.Acitivity)">
            <summary>
            更新
            </summary>
            <param name="acitivity"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.AcitivityController.DeleteAcitivity(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">商场活动id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.HDGL.MatchController">
            <summary>
            赛事安排
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.GetMatchPaging(GLXT.Spark.ViewModel.HDGL.MatchSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.InitMatch">
            <summary>
            初始化编辑页面
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.GetMatchById(System.Int32)">
            <summary>
            编辑页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.AddMatch(GLXT.Spark.Entity.HDGL.Match)">
            <summary>
            添加意向企业
            </summary>
            <param name="match">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.PutMatch(GLXT.Spark.Entity.HDGL.Match)">
            <summary>
            更新
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HDGL.MatchController.DeleteMatch(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.HomeController">
            <summary>
            信息提示
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.Error400">
            <summary>
            系统异常返回函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.Error404">
            <summary>
            404 菜单没有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.Error403">
            <summary>
            403 菜单按钮没权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.Error401">
            <summary>
            401 按钮没权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.BubbleCode">
            <summary>
            泡泡中文验证码 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.HybridCode">
            <summary>
            数字字母组合验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.GifBubbleCode">
            <summary>
            gif泡泡中文验证码 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.HomeController.GifHybridCode(System.String)">
            <summary>
            gif数字字母组合验证码
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.JKGL.MonitorController">
            <summary>
            监控管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.GetMonitorPaging(GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.GetMonitorList">
            <summary>
            监控列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.getAllMonitorNode">
            <summary>
            监控节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.GetMonitorById(System.Int32)">
            <summary>
            编辑页面 根据id获取监控信息
            </summary>
            <param name="id">监控id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.AddMonitor(GLXT.Spark.Entity.JKGL.Monitor)">
            <summary>
            添加监控
            </summary>
            <param name="Monitor">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.PutMonitor(GLXT.Spark.Entity.JKGL.Monitor)">
            <summary>
            更新
            </summary>
            <param name="Monitor"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.DeleteMonitor(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">监控id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.AddMonitorNode(GLXT.Spark.Entity.JKGL.Monitor)">
            <summary>
            添加监控节点
            </summary>
            <param name="Monitor">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.JKGL.MonitorController.PutMonitorNode(GLXT.Spark.Entity.JKGL.Monitor)">
            <summary>
            更新节点
            </summary>
            <param name="Monitor"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.QYGL.ResourcesController">
            <summary>
            房产资源管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.ResourcesController.GetPropertyPaging">
            <summary>
            获取企业信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.QYGL.VisitorController">
            <summary>
            访客管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.VisitorController.GetVisitorPaging(GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.VisitorController.GetVisitorById(System.Int32)">
            <summary>
            编辑页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.VisitorController.AddVisitor(GLXT.Spark.Entity.QYGL.Visitor)">
            <summary>
            添加意向企业
            </summary>
            <param name="visitor">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.VisitorController.PutVisitor(GLXT.Spark.Entity.QYGL.Visitor)">
            <summary>
            更新
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.QYGL.VisitorController.DeleteVisitor(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.RSGL.PersonController">
            <summary>
            用户
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.GetPersonPaging(System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.GetPersonList(System.Nullable{System.Int32},System.String)">
            <summary>
            获取人员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.AddPerson(GLXT.Spark.Entity.RSGL.Person)">
            <summary>
            添加人员信息
            </summary>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.PutPerson(GLXT.Spark.Entity.RSGL.Person)">
            <summary>
            更修人员信息
            </summary>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.DeletePerson(System.Int32)">
            <summary>
            删除人员信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.GetInfo">
            <summary>
            初始化用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.ResetPassWord(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="oldPassWord">旧密码</param>
            <param name="newPassWord">新密码</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.PatchAvatar(GLXT.Spark.Entity.XTGL.UpFileTemp)">
            <summary>
            修改自己的头像
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.setDefaultPassword(System.Int32)">
            <summary>
            设置默认密码
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonController.GetPersonEditInit(System.Int32)">
            <summary>
            用户信息编辑数据接口
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.RSGL.PersonPostController">
            <summary>
            用户岗位管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.GetPersonPostList(System.String)">
            <summary>
            获取全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.GetAllPersonPostById(System.Nullable{System.Int32})">
            <summary>
            根据用户id获取所有岗位信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.GetPersonPostListById(System.Nullable{System.Int32})">
            <summary>
            根据用户id获取全部岗位信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.GetPersonPostById(System.Nullable{System.Int32})">
            <summary>
            根据id获取岗位信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.AddPersonPost(GLXT.Spark.Entity.RSGL.PersonPost)">
            <summary>
            添加用户岗位信息
            </summary>
            <param name="PersonPost"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.PutPersonPost(GLXT.Spark.Entity.RSGL.PersonPost)">
            <summary>
            更新用户岗位信息
            </summary>
            <param name="PersonPost"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.DeletePersonPost(System.Int32)">
            <summary>
            删除岗位池
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PersonPostController.GetPersonPostEditInit(System.Int32,System.Int32)">
            <summary>
            用户岗位信息编辑数据接口
            </summary>
            <param name="orgId"></param>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.RSGL.PostController">
            <summary>
            岗位
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.GetPostPaging(GLXT.Spark.ViewModel.RSGL.PostSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.GetPostList(System.String)">
            <summary>
            获取全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.AddPost(GLXT.Spark.Entity.RSGL.Post)">
            <summary>
            添加岗位信息
            </summary>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.PutPost(GLXT.Spark.Entity.RSGL.Post)">
            <summary>
            修改岗位信息
            </summary>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.DeletePost(System.Int32)">
            <summary>
            删除岗位信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostController.GetPostById(System.Nullable{System.Int32})">
            <summary>
            根据ID获取岗位信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.RSGL.PostPoolController">
            <summary>
            岗位池
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolPaging(System.Int32,System.Int32,System.String)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolList(System.String)">
            <summary>
            获取全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolById(System.Nullable{System.Int32})">
            <summary>
            编辑表单/根据id获取岗位池信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolDetailList">
            <summary>
            根据岗位池明细信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.AddPostPool(GLXT.Spark.Entity.RSGL.PostPool)">
            <summary>
            添加岗位池
            </summary>
            <param name="PostPool"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.PutPostPool(GLXT.Spark.Entity.RSGL.PostPool)">
            <summary>
            更新岗位池
            </summary>
            <param name="PostPool"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.DeletePostPool(System.Int32)">
            <summary>
            删除岗位池
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolDetailById(System.Nullable{System.Int32})">
            <summary>
            根据id获取岗位池详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostPoolEditInit">
            <summary>
            岗位池信息编辑数据接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.RSGL.PostPoolController.GetPostListByOrgId(System.Nullable{System.Int32})">
            <summary>
            根据组织机构id获取岗位列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.WYGL.PropertyController">
            <summary>
            物业管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.WYGL.PropertyController.GetPropertyPaging">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.AccountSetController">
            <summary>
            账套信息
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.GetAccountSet(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.AddAccountSet(GLXT.Spark.Entity.XTGL.AccountSet)">
            <summary>
            添加
            </summary>
            <param name="accountSet"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.PutAccountSet(GLXT.Spark.Entity.XTGL.AccountSet)">
            <summary>
            更新
            </summary>
            <param name="accountSet"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.DeleteAccountSet(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.GetAccountSetByOrgId(System.Int32)">
            <summary>
            根据组织机构Id获取其对应的账套
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.AccountSetController.GetAccountSetStaticsById(System.Int32)">
            <summary>
            编辑页面 根据id获取企业信息及统计数据
            </summary>
            <param name="id">企业id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.BillFlowController">
            <summary>
            流程信息
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.GetBillFlowPaging(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            获取流程信息
            </summary>
            <param name="currentPage"></param>
            <param name="pageSize"></param>
            <param name="formId"></param>
            <param name="number"></param>
            <param name="grade">重要等级</param>
            <param name="state"></param>
            <param name="type">0我创建的 1 我待审批的 2我已经审批的</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.GetMyBillFlowShowCount">
            <summary>
            显示我的流程 数量数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.InitMyBillFlow">
            <summary>
            初始化 我的流程页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.IsCheckUp(System.Nullable{System.Int32})">
            <summary>
            判断是否已经审批了
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.AddBillFlowNodes(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.BillFlowNode})">
            <summary>
            编辑流程添加 BillFlowNode
            </summary>
            <param name="billFlowNodes"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.InitAttitude(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化流程信息
            </summary>
            <param name="formId">表单Id</param>
            <param name="billFlowId">流程id</param>
            <param name="billId">单据id</param>
            <param name="toBeforeState">是否允许退到当前状态之前</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.BillFlowController.BillFlowAutoChecked">
            <summary>
            【任务接口】远程调用的自动审核接口
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.CityController">
            <summary>
            城市数据
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.CityController.GetCityPaging(System.Int32,System.Int32)">
            <summary>
            城市列表分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.CityController.GetCityList(System.Nullable{System.Int32})">
            <summary>
            获取城市列表
            </summary>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.CityController.AddCity(GLXT.Spark.Entity.XTGL.City)">
            <summary>
            添加城市列表
            </summary>
            <param name="CityData"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.CityController.PutCity(GLXT.Spark.Entity.XTGL.City)">
            <summary>
            更新城市列表
            </summary>
            <param name="CityData"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.CityController.DeleteCity(System.Int32)">
            <summary>
            删除城市列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.DictionaryController">
            <summary>
            字典数据
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.GetDictionaryPaging(System.Int32,System.Int32,System.String)">
            <summary>
            字典列表分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.GetDictionaryList(System.String,System.Int32)">
            <summary>
            根据类型获取字典列表
            </summary>
            <param name="type"></param>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.GetDictionaryGroupType">
            <summary>
            获取字典类型分组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.InitDictionary(System.String)">
            <summary>
            编辑 初始化信息
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.AddDictionary(GLXT.Spark.Entity.XTGL.Dictionary)">
            <summary>
            添加字典列表
            </summary>
            <param name="dictionaryData"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.PutDictionary(GLXT.Spark.Entity.XTGL.Dictionary)">
            <summary>
            更新字典列表
            </summary>
            <param name="dictionaryData"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.PutDictionaryTypeName(System.Object)">
            <summary>
            根据类型修改类型名称
            </summary>
            <param name="o">动态类型</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.DeleteDictionary(System.Int32)">
            <summary>
            删除字典列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.DictionaryController.GetDictionarysByTypes(System.String)">
            <summary>
            根据类型串获取字典列表
            </summary>
            <param name="types">类型列表以,分隔</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.FlowController">
            <summary>
            流程设计
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.FlowController.PutFlowPrev(GLXT.Spark.Entity.XTGL.Flow)">
            <summary>
            上移
            </summary>
            <param name="flow"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.FlowController.PutFlowNext(GLXT.Spark.Entity.XTGL.Flow)">
            <summary>
            下移
            </summary>
            <param name="flow"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.FlowController.PutFlowBottom(GLXT.Spark.Entity.XTGL.Flow)">
            <summary>
            置末
            </summary>
            <param name="flow"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.FlowController.PutFlowTop(GLXT.Spark.Entity.XTGL.Flow)">
            <summary>
            置顶
            </summary>
            <param name="flow"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.FlowController.GetFieldTypeList">
            <summary>
            返回字段类型及可用操作符
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.FormController">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.MessageController">
            <summary>
            信息数据
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.GetRemindPaging(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            信息列表分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.SendRemind(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.Remind})">
            <summary>
            发送系统消息
            </summary>
            <param name="MessageData"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.GetRemindByBillFlowId(System.Nullable{System.Int32})">
            <summary>
            根据流程Id 获取消息信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.PutIsRead(System.Int32)">
            <summary>
            更新信息列表
            </summary>
            <param name="msgId">信息对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.CheckRemind(System.Nullable{System.Int32},System.String)">
            <summary>
            验证消息然后自动登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.SendMessage(GLXT.Spark.Entity.XTGL.Message)">
            <summary>
            发送系统消息
            </summary>
            <param name="msg">消息对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.GetMessageByBillFlowId(System.Int32)">
            <summary>
            根据流程Id 获取 消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.GetMyMessageUser(System.Int32,System.Int32)">
            <summary>
            获取我的动态信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.MessageController.GetExceptionsPaging(System.Int32,System.Int32)">
            <summary>
            异常信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.OrganizationController">
            <summary>
            组织机构
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetOrganizationPaging(System.Int32,System.Int32,System.String)">
            <summary>
            分页组织机构
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetOrganizationList(GLXT.Spark.Entity.XTGL.Organization)">
            <summary>
            获取组织机构
            </summary>
            <param name="organization"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetCurrentCompanyOrgList">
            <summary>
            获取当前用户所在公司的所有组织机构
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetComOrganizationList(GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel)">
            <summary>
            获取当前用户所在公司的组织机构
            </summary>
            <param name="osvm"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetComOrganizationAndPersonList(GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel)">
            <summary>
            获取当前用户所在公司的组织机构和人员组成
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.AddOrganization(GLXT.Spark.Entity.XTGL.Organization)">
            <summary>
            添加组织机构
            </summary>
            <param name="organization"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.PutOrganization(GLXT.Spark.Entity.XTGL.Organization)">
            <summary>
            更新组织机构
            </summary>
            <param name="organization"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.PatchOrganization(System.Int32,System.Int32)">
            <summary>
            更新状态
            </summary>
            <param name="id">id</param>
            <param name="status">状态 0|1</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.DeleteOrganization(System.Int32)">
            <summary>
            删除组织机构
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.OrganizationController.GetOrgWithProject">
            <summary>
            获取当前用户所在公司的项目的上级所有组织机构
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.PageController">
            <summary>
            菜单页面
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.PageController.GetPageList">
            <summary>
            获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.PageController.GetPageAndPermit">
            <summary>
            初始化为角色添加页面权限
            1.获取所有页面数据
            2.获取页面对应的权限数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.PageController.GetList">
            <summary>
            获取所有 菜单和按钮
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.RoleController">
            <summary>
            角色
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetRolePaging(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            获取角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.AddRole(GLXT.Spark.Entity.XTGL.Role)">
            <summary>
            添加角色
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.PutRole(GLXT.Spark.Entity.XTGL.Role)">
            <summary>
            更修角色
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetUserRole(System.Nullable{System.Int32})">
            <summary>
            获取用户角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.AddUserRole(GLXT.Spark.Entity.XTGL.UserRole)">
            <summary>
            添加用户角色
            </summary>
            <param name="userRole">用户角色对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.PutUserRole(GLXT.Spark.Entity.XTGL.UserRole)">
            <summary>
            修改用户角色
            </summary>
            <param name="userRole"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.DeleteUserRole(System.Nullable{System.Int32})">
            <summary>
            删除用户角色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.AddRolePermit(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.RolePermit})">
            <summary>
            添加角色权限
            </summary>
            <param name="rolePermit">角色权限对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetRolePermitByRoleId(System.String)">
            <summary>
            根据角色获取角色权限列表
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetUserOrganizationList(GLXT.Spark.Entity.XTGL.UserOrganization)">
            <summary>
            获取全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetUserDataRange(System.Int32)">
            <summary>
            获取用户公司数据和组织机构公司数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.GetCurrentUserOrg">
            <summary>
            获取当前用户数据范围中的组织机构数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.PutUserOrganizationSelected(GLXT.Spark.Entity.XTGL.UserOrganization)">
            <summary>
            修改用户公司默认选中项
            </summary>
            <param name="userOrganization"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.InitUserCheckupOrganization(System.Int32)">
            <summary>
            初始化 用户角色审核范围权限 选项卡数据
            </summary>
            <param name="personId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.RoleController.DeleteUserCheckupOrganization(System.Nullable{System.Int32})">
            <summary>
            删除用户角色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.UpFileController">
            <summary>
            上传文件controller
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UpFileController.UpLoadImage">
            <summary>
            上传图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UpFileController.UpLoadFile">
            <summary>
            上传文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UpFileController.GetFile(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            获取文件流
            </summary>
            <param name="addFlag">是否是新加的文件</param>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UpFileController.DeleteUpFileTemp">
            <summary>
            删除临时上传文件表(定时任务使用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UpFileController.PutFileName(System.Object)">
            <summary>
            修改文件名
            </summary>
            <param name="dyc">接收的对象</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.XTGL.UserController">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UserController.Login(GLXT.Spark.Entity.RSGL.Person)">
            <summary>
            登录获取 Token
            </summary>
            <param name="person">用户名和密码对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UserController.GetInfo">
            <summary>
            初始化用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.XTGL.UserController.ResetPassWord(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="oldPassWord">旧密码</param>
            <param name="newPassWord">新密码</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.ZSGL.BussinessInformationController">
            <summary>
            招商资讯管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.BussinessInformationController.GetBussinessInformationPaging(GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.ZSGL.ContractController">
            <summary>
            合同签订
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.ContractController.GetContractPaging(GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.ContractController.GetContractById(System.Int32)">
            <summary>
            编辑页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.ContractController.GetContractDetailById(System.Int32)">
            <summary>
            详情页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.ContractController.AddContract(GLXT.Spark.Entity.ZSGL.Contract)">
            <summary>
            添加意向企业
            </summary>
            <param name="contract">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.ContractController.PutContract(GLXT.Spark.Entity.ZSGL.Contract)">
            <summary>
            更新
            </summary>
            <param name="contract"></param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Controllers.ZSGL.EnterpriseController">
            <summary>
            意向企业
            </summary>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.GetEnterprisePaging(GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel)">
            <summary>
            获取分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.GetEnterpriseList(System.Nullable{System.Int32},System.String)">
            <summary>
            意向企业列表
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.InitEnterprise">
            <summary>
            初始化编辑页面
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.GetEnterpriseById(System.Int32)">
            <summary>
            编辑页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.GetEnterpriseDetailById(System.Int32)">
            <summary>
            详情页面 根据id获取意向企业信息
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.AddEnterprise(GLXT.Spark.Entity.ZSGL.Enterprise)">
            <summary>
            添加意向企业
            </summary>
            <param name="enterprise">对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.PutEnterprise(GLXT.Spark.Entity.ZSGL.Enterprise)">
            <summary>
            更新
            </summary>
            <param name="enterprise"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Controllers.ZSGL.EnterpriseController.DeleteEnterprise(System.Nullable{System.Int32})">
            <summary>
            作废
            </summary>
            <param name="id">意向企业id</param>
            <returns></returns>
        </member>
        <member name="T:GLXT.Spark.Entity.BaseCheckup">
            <summary>
            包含审批流
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCheckup.BillFlowId">
            <summary>
            单据审批流程Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCheckup.SubmitUserId">
            <summary>
            提交人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCheckup.SubmitUserName">
            <summary>
            提交人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCheckup.SubmitDate">
            <summary>
            提交日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCheckup.BillFlow">
            <summary>
            单据审批流
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.BaseCreateUser">
            <summary>
            制单人、制单日期、更新人、更新日期等字段
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.CreateUserId">
            <summary>
            制单人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.CreateUserName">
            <summary>
            制单人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.CreateDate">
            <summary>
            制单日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.LastEditUserId">
            <summary>
            更新人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.LastEditUserName">
            <summary>
            更新人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.BaseCreateUser.LastEditDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="M:GLXT.Spark.Entity.DBContext.WriteEFDataLog">
            <summary>
            EF变更日志
            </summary>
        </member>
        <member name="M:GLXT.Spark.Entity.DBContext.WriteEFUpdateLog(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.String)">
            <summary>
            记录EF修改操作日志
            </summary>
            <param name="entry"></param>
            <param name="tableName"></param>
        </member>
        <member name="T:GLXT.Spark.Entity.GGGL.Advertisement">
            <summary>
            广告管理
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Title">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.GGGL.Advertisement.UpFile">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.HDGL.Acitivity">
            <summary>
            商场活动
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Title">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Acitivity.UpFile">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.HDGL.Match">
            <summary>
            赛事安排
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Title">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.HDGL.Match.UpFile">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.JKGL.Monitor">
            <summary>
            监控信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.PId">
            <summary>
            int：上级
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.Number">
            <summary>
            string：编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.Name">
            <summary>
            string：监控名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.IPAddress">
            <summary>
            string：监控IP地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.LoginName">
            <summary>
            string：登录账号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.LoginPassword">
            <summary>
            string：登录密码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.Remark">
            <summary>
            string：备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.IsMonitor">
            <summary>
            bool：是否是监控
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.JKGL.Monitor.InUse">
            <summary>
            bool：是否使用
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.QYGL.CompanyInfo">
            <summary>
            企业信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.CompanyInfo.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.CompanyInfo.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.CompanyInfo.InformationType">
            <summary>
            int：资讯类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.CompanyInfo.Title">
            <summary>
            string：资讯标题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.CompanyInfo.Content">
            <summary>
            string：资讯内容
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.QYGL.Resources">
            <summary>
            房产资源
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.PId">
            <summary>
            上级
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.ShortName">
            <summary>
            缩写
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.Optional">
            <summary>
            是否可选择（1、可选择；2、不可选择）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.InUse">
            <summary>
            是否可用（1、可用；0、禁用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Resources.IsRent">
            <summary>
            是否出租
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.QYGL.Visitor">
            <summary>
            访客信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.Telphone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.OrderTime">
            <summary>
            预约时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.OrderSuccessTime">
            <summary>
            预约成功时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.VisitTime">
            <summary>
            到访时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.LeaveTime">
            <summary>
            离开时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.OrgId">
            <summary>
            拜访部门
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.RegionId">
            <summary>
            拜访区域
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.ReceivePerson">
            <summary>
            接待人
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.ReceiveTel">
            <summary>
            接待人联系方式
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.CarNum">
            <summary>
            车牌
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.VisitReason">
            <summary>
            拜访原因
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.QYGL.Visitor.PeerNum">
            <summary>
            同行人数
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.RSGL.Person">
            <summary>
            人员信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Id">
            <summary>
            id号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Number">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.CompanyId">
            <summary>
            公司
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.OrganizationId">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.PostId">
            <summary>
            所属岗位
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.IDType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.IDNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.PhoneNumber">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.IDAddress">
            <summary>
            身份证住址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.HomeAddres">
            <summary>
            家庭住址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.BirthDate">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.AWBank">
            <summary>
            int:开户行
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Account">
            <summary>
            string:开户帐户
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.IsConfirmAccount">
            <summary>
            bool:是否已确认帐号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.ConfirmAccountUserID">
            <summary>
            int:帐号确认人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.ConfirmAccountUserName">
            <summary>
            string:帐号确认人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.ConfirmAccountDate">
            <summary>
            DateTime:帐号确认日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.PersonTypeID">
            <summary>
            人员类型ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.InUse">
            <summary>
            是否可用（1、可用；0、禁用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.IsUser">
            <summary>
            是否用户 1.是 0 不是
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.ExpirationDate">
            <summary>
            过期日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.DisableMsg">
            <summary>
            不能登录原因
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.CreateUserId">
            <summary>
            制单人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.CreateUserName">
            <summary>
            制单人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.CreateDate">
            <summary>
            制单日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.LastEditUserId">
            <summary>
            更新人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.LastEditUserName">
            <summary>
            更新人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Person.LastEditDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="M:GLXT.Spark.Entity.RSGL.PersonExtend.ToBasicInfo(GLXT.Spark.Entity.RSGL.Person)">
            <summary>
            人员信息中去除敏信息，只保留基本信息
            </summary>
            <param name="person">Person</param>
            <returns>Person</returns>
        </member>
        <member name="T:GLXT.Spark.Entity.RSGL.PersonPost">
            <summary>
            人员岗位
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.PersonId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.PostPoolDetailId">
            <summary>
            岗位池Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.OrgId">
            <summary>
            组织机构Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.PostId">
            <summary>
            岗位Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.PositionId">
            <summary>
            职务Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.IsMain">
            <summary>
            是否是主岗位
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PersonPost.InUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.Name">
            <summary>
            string：岗位名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.PostSequenceID">
            <summary>
            int：岗位序列ID（1、业务管理序列；2、综合管理序列；3、项目经理序列；4、专业技术序列）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.BussinessLineID">
            <summary>
            int：所属条线ID（1、；2、；3、；4、；5、...）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.Post.RankRangeMin">
            <summary>
            职级范围（1-15）
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.RSGL.PostPool">
            <summary>
            岗位池
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.CompanyId">
            <summary>
            int:公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.Name">
            <summary>
            string：名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.OrgId">
            <summary>
            int:适用范围（组织机构ID）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.Category">
            <summary>
            string:类别
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPool.InUse">
            <summary>
            是否使用（）
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.RSGL.PostPoolDetail">
            <summary>
            岗位池明细表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.PostPoolId">
            <summary>
            int:岗位池ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.PostId">
            <summary>
            int:岗位ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.Qualifications">
            <summary>
            string:任职资格
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.PostDuty">
            <summary>
            string:岗位职责
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.AdminLeaderId">
            <summary>
            int:行政领导ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.LineLeaderId">
            <summary>
            int:条线领导
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.RoleId">
            <summary>
            int:角色Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.RSGL.PostPoolDetail.InUse">
            <summary>
            bool:是否使用
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.WYGL.Property">
            <summary>
            物业管理
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.WYGL.Property.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.WYGL.Property.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.AccountSet">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.FullName">
            <summary>
            全名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.ShortName">
            <summary>
            缩写
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.TaxNumber">
            <summary>
            税号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.PhoneNumber">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.Bank">
            <summary>
            开户行
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.AccountNumber">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.InUse">
            <summary>
            是否使用 1：可用 0：禁用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.CreateUserId">
            <summary>
            创建人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.CreateUserName">
            <summary>
            创建人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.CreateDate">
            <summary>
            创建日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.LastEditUserId">
            <summary>
            更新人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.LastEditUserName">
            <summary>
            更新人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.AccountSet.LastEditDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Attitude">
            <summary>
            审批意见
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.BillId">
            <summary>
            单据Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.Type">
            <summary>
            审批意见类型 1= 审批信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.Operation">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.Title">
            <summary>
            意见抬头
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.Content">
            <summary>
            意见内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.ReceiveDate">
            <summary>
            到达本节点时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.BackGroup">
            <summary>
            退回到的点
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Attitude.AttitudeType">
            <summary>
            审批类型
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.BillFlow">
            <summary>
            单据审批流程
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.FlowId">
            <summary>
            流程Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.BillId">
            <summary>
            单据Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.BillNumber">
            <summary>
            单据编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.Summary">
            <summary>
            摘要
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.Amount">
            <summary>
            主表金额
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlow.BillFlowNode">
            <summary>
            流程节点
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.BillFlowNode">
            <summary>
            单据审批流程节点
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.BillFlowId">
            <summary>
            单据流程Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Group">
            <summary>
            分组号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Mode">
            <summary>
            审批模式
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.RoleType">
            <summary>
            角色类型（角色（岗位）、制单人、审核人、行政领导、条线领导）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.State">
            <summary>
            单据状态（制单、审核、支付、事后审核等）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Option">
            <summary>
            表单审批到该结点时是否要执行某种操作
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.MaxDays">
            <summary>
            最长审批天数，超时将自动跳到下一流程。不限制时0
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Grade">
            <summary>
            紧急程度 0，普通 1重要 2 非常重要
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.OrgId">
            <summary>
            本节点对应的组织机构Id（仅在流程生成时做对比使用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.PersonId">
            <summary>
            应审批人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.ReceiveDate">
            <summary>
            到当前状态日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.IsCurrentState">
            <summary>
            是否为当前待审批状态
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.IsChecked">
            <summary>
            是否已审批
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.IsAutoChecked">
            <summary>
            是否为超时自动审批
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.CheckupPersonId">
            <summary>
            实际审批人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.CheckupDate">
            <summary>
            审批时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Remark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.NodeType">
            <summary>
            节点类型（0、流程节点；1、新增节点）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.CreateUserId">
            <summary>
            制单人ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.CreateUserName">
            <summary>
            制单人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.CreateDate">
            <summary>
            制单日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Person">
            <summary>
            表单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.IsFixedNode">
            <summary>
            流程中的固定节点（流程生成时使用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.BillFlowNode.PersonList">
            <summary>
            该节点下可选人员（流程生成时使用）
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.City">
            <summary>
            字典
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Dictionary">
            <summary>
            字典
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.Name">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.ConditionDescription">
            <summary>
            条件说明
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.InUse">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.FlowNode">
            <summary>
            流程节点
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Flow.FlowCondition">
            <summary>
            流程条件
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.FlowCondition">
            <summary>
            流程执行条件
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.FlowId">
            <summary>
            流程Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.PCode">
            <summary>
            父编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.FormFlowFieldId">
            <summary>
            表单字段Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.Operator">
            <summary>
            运算符（包括逻辑运算符及比较运算符）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.Value">
            <summary>
            要对比的值
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.IsLeaf">
            <summary>
            是否为叶节点
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowCondition.FormFlowField">
            <summary>
            表单字段
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.FlowNode">
            <summary>
            流程节点
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.FlowId">
            <summary>
            流程Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.Group">
            <summary>
            分组号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.Mode">
            <summary>
            审批模式
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.Option">
            <summary>
            操作类型（无操作时为0）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.RoleType">
            <summary>
            角色类型（角色（岗位）、制单人、审核人、行政领导、条线领导）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.State">
            <summary>
            节点类型（制单、审核、完成、支付、事后审核等）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.MaxDays">
            <summary>
            最长审批天数，超时将自动跳到下一流程。不限制时0
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FlowNode.Grade">
            <summary>
            紧急程度 0，普通 1重要 2 非常重要
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.NeedCheckup">
            <summary>
            是否需要审批
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.Name">
            <summary>
            表单名称（中文）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.Value">
            <summary>
            数据库表名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.InUse">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.PageId">
            <summary>
            页面外键
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Form.FormFlowField">
            <summary>
            表单字段（用于流程控制）
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.FormFlowField">
            <summary>
            表单字段（与审批流程有关）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.Field">
            <summary>
            字段（属性）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.FieldName">
            <summary>
            字段属性
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.FieldType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.DicType">
            <summary>
            字典类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.InUse">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormFlowField.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.FormState">
            <summary>
            表单状态表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.IsCheckup">
            <summary>
            该节点是否需要人员审核
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.IsFlowNode">
            <summary>
            是否显示在流程中（像作废不需要在流程中显示）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.InUse">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormState.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.FormStateOption">
            <summary>
            表单状态表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.FormId">
            <summary>
            表单Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.FormStateId">
            <summary>
            状态id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.Name">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.InUse">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.FormStateOption.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Log">
            <summary>
            登录日志
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.PersonId">
            <summary>
            人员ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.IPAddress">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.LoginDate">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.ActiveDate">
            <summary>
            活动时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.LogoutDate">
            <summary>
            退出时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.LoginTypeId">
            <summary>
            登录类型（1、电脑登录；2、手机登录；3、临时登录）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Log.OnLine">
            <summary>
            是否在线
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Message">
            <summary>
            信息表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.Type">
            <summary>
            消息类型 0 系统消息 1 流程消息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.SenderId">
            <summary>
            发送人Id 0 系统发送
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.SendTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.SendName">
            <summary>
            发送人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.InUse">
            <summary>
             是否使用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Message.PageId">
            <summary>
            页面Id
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.MessageUser">
            <summary>
            信息用户表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.MessageUser.MessageId">
            <summary>
            信息表（message）外键
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.MessageUser.IsRead">
            <summary>
            是否已读
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.MessageUser.ReadTime">
            <summary>
            读取时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.MessageUser.ReceiverId">
            <summary>
            接收人Id
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Organization">
            <summary>
            组织机构
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.ShortName">
            <summary>
            缩写
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.AccountSetIds">
            <summary>
            所属公司 多个以 “,”逗号隔开
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.Optional">
            <summary>
            是否可选择（1、可选择；2、不可选择）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.IsProject">
            <summary>
            是否是项目（1、是；0、否）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.ProjectId">
            <summary>
            项目Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.CategoryId">
            <summary>
            int:岗位池类别Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.InUse">
            <summary>
            是否可用（1、可用；0、禁用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.IsSum">
            <summary>
            是否统计余额
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.CreateUserId">
            <summary>
            制单人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.CreateUserName">
            <summary>
            制单人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.CreateDate">
            <summary>
            制单日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.LastEditUserId">
            <summary>
            更新人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.LastEditUserName">
            <summary>
            更新人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Organization.LastEditDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.OtherMaterial">
            <summary>
            其他材料
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.CompanyId">
            <summary>
            int:可选择公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.Number">
            <summary>
            string:编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.Name">
            <summary>
            string:名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.MaterialType">
            <summary>
            int:类别
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.Spec">
            <summary>
            string:规格型号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.Unit">
            <summary>
            string:计量单位
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.OtherMaterial.IsForbidden">
            <summary>
            bool:是否禁用
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Page">
            <summary>
            菜单页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.Id">
            <summary>
            Id号码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterName">
            <summary>
            路由名字
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterRedirect">
            <summary>
            路由重定向地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterPath">
            <summary>
            路由路径地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterComponent">
            <summary>
            路由组件
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterIcon">
            <summary>
            路由图标
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterTitle">
            <summary>
            路由页面标题
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.RouterHidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Page.IsPage">
            <summary>
            是否页面
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Permit">
            <summary>
            权限表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.PageId">
            <summary>
            所属菜单
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.Code">
            <summary>
            标识码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.Controller">
            <summary>
            controller
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.Action">
            <summary>
            action
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Permit.IsView">
            <summary>
            是否是查看
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Remind">
            <summary>
            通知提醒表
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.IsTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.Type">
            <summary>
            消息类型 0 系统消息 1 流程消息
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.IsRead">
            <summary>
            是否已读
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.ReceiverId">
            <summary>
            接收人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.ReadTime">
            <summary>
            读取时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.SenderId">
            <summary>
            发送人Id 0 系统发送
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.SendTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.SendName">
            <summary>
            发送人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.InUse">
            <summary>
             是否使用
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Remind.PageId">
            <summary>
            页面Id
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Role.Status">
            <summary>
            状态 0：不正常 1：正常
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.Role.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.RolePermit">
            <summary>
            角色权限表
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.SystemExceptions">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.UserCheckupOrganization">
            <summary>
            用户审核范围权限
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.UserOrganization">
            <summary>
            用户公司权限
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.XTGL.UserRole">
            <summary>
            用户角色
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.UserRole.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.UserRole.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.XTGL.UserRole.Person">
            <summary>
            导航属性
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.ZSGL.BussinessInformation">
            <summary>
            招商资讯
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.InformationType">
            <summary>
            int：资讯类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.Title">
            <summary>
            string：资讯标题
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.Content">
            <summary>
            string：资讯内容
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.BussinessInformation.Url">
            <summary>
            string：链接
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.ZSGL.Contract">
            <summary>
            合同签订
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.Number">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.EnterpriseId">
            <summary>
            签订公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.RegionId">
            <summary>
            签订区域Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.StartDate">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.EndDate">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.IsForever">
            <summary>
            bool：是否永久合同
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.Enterprise">
            <summary>
            导航属性
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Contract.UpFile">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="T:GLXT.Spark.Entity.ZSGL.Enterprise">
            <summary>
            意向企业
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.CompanyId">
            <summary>
            公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.LegalPerson">
            <summary>
            法定代表人
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.EmployeeNum">
            <summary>
            从业人数
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Output">
            <summary>
            企业产值
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Tax">
            <summary>
            税收
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.LinkMan">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.LinkTel">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.OfficialNet">
            <summary>
            官网
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Area">
            <summary>
            建筑面积
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.FormerName">
            <summary>
            曾用名
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.OperationState">
            <summary>
            经营状态
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.RegCapital">
            <summary>
            注册资本
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.PaidCapital">
            <summary>
            实缴资本
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Occupation">
            <summary>
            所属行业
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.UniSocialCreditCode">
            <summary>
            统一社会信用代码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.TaxNum">
            <summary>
            纳税人识别号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.BusinessLicense">
            <summary>
            工商注册号
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.OrgCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.SetDate">
            <summary>
            成立日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.StartDate">
            <summary>
            营业期限起
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.EndDate">
            <summary>
            营业期限止
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.EnterpriseType">
            <summary>
            企业类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.CheckDate">
            <summary>
            核准日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.Remark">
            <summary>
            string：备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.Entity.ZSGL.Enterprise.InUse">
            <summary>
            bool：是否使用
            </summary>
        </member>
        <member name="T:GLXT.Spark.Enums.AttitudeEnum">
            <summary>
             审批状态
            </summary>
        </member>
        <member name="T:GLXT.Spark.Enums.AttitudeTypeEnum">
            <summary>
             审批组件的状态
            </summary>
        </member>
        <member name="T:GLXT.Spark.Enums.BillStateEnum">
            <summary>
            单据状态
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Create">
            <summary>
            制单
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Checkup">
            <summary>
            审批
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Seal">
            <summary>
            用章
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.payment">
            <summary>
            支付
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Save">
            <summary>
            存档
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Finish">
            <summary>
            完成
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.BillStateEnum.Invalid">
            <summary>
            作废
            </summary>
        </member>
        <member name="T:GLXT.Spark.Enums.FlowRoleType">
            <summary>
            审核节点类型
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.FlowRoleType.Role">
            <summary>
            角色（岗位）
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.FlowRoleType.CreateUser">
            <summary>
            制单人
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.FlowRoleType.CheckPerson">
            <summary>
            审核人（需手动选择）
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.FlowRoleType.AdminLeader">
            <summary>
            行政领导
            </summary>
        </member>
        <member name="F:GLXT.Spark.Enums.FlowRoleType.LineLeader">
            <summary>
            条线领导
            </summary>
        </member>
        <member name="T:GLXT.Spark.Enums.PersonTypeEnum">
            <summary>
             人员类型
            </summary>
        </member>
        <member name="T:GLXT.Spark.IService.IBillFlowService">
            <summary>
            流程
            </summary>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.BillFlowRevoke(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程撤销
            </summary>
            <param name="bf">流程对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.CheckBillFlowRevoke(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            判断是否能撤销
            </summary>
            <param name="bf"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlowNodeForBack(System.Int32,System.Boolean,GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            审批退回到某一节点，获取前面的所有节点列表
            </summary>
            <param name="billId"></param>
            <param name="bf"></param>
            <param name="toBeforeState"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlowById(System.Int32)">
            <summary>
            获取流程数据
            </summary>
            <param name="billFlowId">单据中的字段billFlowId</param>
            <returns>BillFlow</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlowByBillId(System.Int32,System.Int32)">
            <summary>
            根据单据billId查找 流程数据
            </summary>
            <param name="billId">单据表中 billId</param>
            <param name="formId">单据表中 formId</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.CheckBillFlowNodeIsChecked(System.Int32,GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            验证流程待审批节点中当前用户是否审批
            </summary>
            <param name="billFlowId">流程id</param>
            <param name="billFlow">流程数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.CheckThisBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            验证流程
            </summary>
            <param name="billFlow">流程数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.BillFlowNextAction(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            流程下一步动作
            </summary>
            <param name="attitudeType">审批类型（下一步，退回，作废之类的）</param>
            <param name="billId">单据id</param>
            <param name="formId">表单Id</param>
            <param name="backGroup">回退到制单，还是某个节点</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlow``1(``0,System.Boolean,System.Int32[])">
            <summary>
            根据表单内容生成审批流程，返回生成结果
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <param name="refresh">是否重新生成流程</param>
            <param name="orgIds">组织机构（为空时取表单中的OrgId）</param>
            <returns>item1为是否成功，item2为错误消息</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlow``1(``0,System.Boolean,System.Int32[],System.Collections.Generic.KeyValuePair{System.Int32,System.Int32[]}[])">
            <summary>
            根据表单内容生成审批流程（可定义不同状态分属不同组织机构），返回生成结果
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <param name="refresh">是否重新生成流程</param>
            <param name="orgIds">组织机构</param>
            <param name="stateOrgs">单据状态及对应组织机构列表</param>
            <returns>item1为是否成功，item2为错误消息</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetFlowId``1(``0)">
            <summary>
            根据表单数据返回对应的流程Id
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <returns>流程Id</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.CheckBillFlow(GLXT.Spark.Entity.XTGL.BillFlow,System.String@)">
            <summary>
            检验流程中人员是否完整
            </summary>
            <param name="billFlow"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.SaveBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程保存
            </summary>
            <param name="billFlow">流程对象</param>
            <returns>流程对象</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.SubmitBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            提交流程
            </summary>
            <param name="billFlow">流程对象</param>
            <returns>BillFlow</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetFieldVelue``1(``0,System.String)">
            <summary>
            查询对象的某一属性值
            </summary>
            <param name="billObj">对象</param>
            <param name="field">属性（可查询级联属性，如Organization.Name）</param>
            <returns>属性值</returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetFieldTypeList">
            <summary>
            返回字段类型及可用操作符
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetAttitudeByBillId(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据流程Id获取审批记录
            </summary>
            <param name="formId"></param>
            <param name="billId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetBillFlowNodeByBillId(System.Int32,System.Int32,GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            
            </summary>
            <param name="formId">表单Id</param>
            <param name="billId">单据Id</param>
            <param name="billFlow">流程</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.AddAttitude(GLXT.Spark.Entity.XTGL.Attitude)">
            <summary>
            增加审批意见
            </summary>
            <param name="attitude"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.IBillFlowService.GetFormState(System.String,System.Int32)">
            <summary>
            根据表单名获取表单状态
            </summary>
            <param name="TableName">表单名</param>
            <param name="DefaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetPersonListByOrgId(System.Int32,System.Int32,System.String)">
            <summary>
            查询对应组织机构下的人员组成
            </summary>
            <param name="orgId"></param>
            <param name="postId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetPersonOrgIds(System.Int32,System.String)">
            <summary>
            根据人员信息查询对应的组织机构
            </summary>
            <param name="postId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetPostListByOrgId(System.Int32)">
            <summary>
            查询对应组织机构下的岗位
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetCachePersonBasicInfoList(System.Int32)">
            <summary>
            查询并缓存人员基本信息
            </summary>
            <param name="companyId">公司Id</param>
            <returns>List</returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetCacheList``1">
            <summary>
            泛型 自动根据类型 获取缓存列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.SetCache``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            根据key设置List
            </summary>
            <typeparam name="T">class</typeparam>
            <param name="keyName"></param>
            <param name="list">数据</param>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.GetCache``1(System.String)">
            <summary>
            根据key获取cache
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.RemoveCache``1(System.String)">
            <summary>
            根据key移除缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keyName"></param>
        </member>
        <member name="M:GLXT.Spark.IService.ICommonService.RemoveCache``1">
            <summary>
            泛型 自动根据类型 删除缓存
            </summary>
            <typeparam name="T">类名</typeparam>
        </member>
        <member name="T:GLXT.Spark.IService.IPersonService">
            <summary>
            人事管理
            </summary>
        </member>
        <member name="T:GLXT.Spark.IService.IPrincipalAccessor">
            <summary>
            获取 当前 用户 claims 信息
            </summary>
        </member>
        <member name="T:GLXT.Spark.IService.ISystemService">
            <summary>
            系统管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetUserRole(System.Int32)">
            <summary>
            获取用户角色 根据用户id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetPermitList(System.String)">
            <summary>
            获取我和我的授权用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetUserOrgChildList(System.Int32)">
            <summary>
            获取用户，数据范围下面，勾选节点下面的所有子节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrganizationList(GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel)">
            <summary>
            根据名称类别等搜索组织机构
            </summary>
            <param name="osvm"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgWithChildren(System.Int32[])">
            <summary>
            根据Id查询组织机构
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetComOrgWithChildren(System.Int32,System.Int32[])">
            <summary>
            根据Id查询指定公司下的组织机构
            </summary>
            <param name="companyId">公司Id</param>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgWithChildrenIds(System.Int32[])">
            <summary>
            根据子节点Ids找到所有根节点
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgWithParents(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.Organization},System.Int32[])">
            <summary>
            给定组织机构中根据Id查询（包含所有父节点）
            </summary>
            <param name="orgLists">给定组织机构列表</param>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgRootToParent(System.Int32[])">
            <summary>
            根据子节点Ids找到所有根节点对应的组织机构
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgStringByLeafNode(System.Int32)">
            <summary>
            根据子节点Id找到所有父节点字符串 例：公司/部门/人事部/员工
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgWithProject(System.Int32)">
            <summary>
            对应公司下项目所对应的组织机构（不包括项目）
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetOrgIsSumByPId(System.Int32)">
            <summary>
            根据当前组织机构父节点ID获取统计余额的父节点组织机构
            </summary>
            <param name="orgPId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetSumOrgList(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.Organization},System.Int32)">
            <summary>
            获取统计余额的组织机构子集
            </summary>
            <param name="orgList">组织机构</param>
            <param name="orgId">父ID</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetWithChildren``1(System.Collections.Generic.List{``0},System.Int32[])">
            <summary>
            查询Id数组中所有节点及子节点
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="list">树形全集，必须包含（Id，PId属性）</param>
            <param name="Ids">节点Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetDictionary(System.String)">
            <summary>
            根据类型获取字典数据
            </summary>
            <param name="type">字典数据类型</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetDictionaryWithChildren(System.String,System.Int32[])">
            <summary>
            返回字典中指定值下的所有子项（用户当前公司）
            </summary>
            <param name="type">字典类型</param>
            <param name="values">值的集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetDictionaryWithName(System.String,System.Int32)">
            <summary>
            返回字典数据中指定类型下所对应值的名称
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetDictionariesWithoutValues(System.Int32[],System.String)">
            <summary>
            根据类型名称获取类型数据
            含有筛选项的排除
            </summary>
            <param name="values">筛选value值</param>
            <param name="type">类型名称</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.IService.ISystemService.GetNewBillNumber``1(System.String,System.Int32)">
            <summary>
            生成单据编号
            </summary>
            <typeparam name="T">单据类型</typeparam>
            <param name="str">编号前缀</param>
            <param name="lenght">流水号长度</param>
            <returns>单据编号</returns>
        </member>
        <member name="T:GLXT.Spark.Model.Flow.FieldType">
            <summary>
            字段数据类型
            </summary>
        </member>
        <member name="M:GLXT.Spark.Model.Flow.FieldType.#ctor(System.String)">
            <summary>
            字段数据类型及可用的运算符
            </summary>
            <param name="type">字段数据类型</param>
        </member>
        <member name="M:GLXT.Spark.Model.Flow.FieldType.#ctor(System.String,System.String)">
            <summary>
            字段数据类型及可用的运算符
            </summary>
            <param name="type">字段数据类型</param>
            <param name="dicType">字典类型</param>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FieldType.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FieldType.DicType">
            <summary>
            字典类型（数据类型为dictionary时有效）
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FieldType.Operator">
            <summary>
            可用的运算符
            </summary>
        </member>
        <member name="T:GLXT.Spark.Model.Flow.FormStateResult">
            <summary>
            表单状态返回
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FormStateResult.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FormStateResult.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Flow.FormStateResult.IsCheck">
            <summary>
            默认选中
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterName">
            <summary>
            路由名字
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterRedirect">
            <summary>
            路由重定向地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterPath">
            <summary>
            路由路径地址
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterComponent">
            <summary>
            路由组件
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterIcon">
            <summary>
            路由图标
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterTitle">
            <summary>
            路由页面标题
            </summary>
            
        </member>
        <member name="P:GLXT.Spark.Model.PageModel.RouterHidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:GLXT.Spark.Model.Person.ClaimsModel.LogId">
            <summary>
            登录日志ID
            </summary>
        </member>
        <member name="T:GLXT.Spark.Service.BillFlowService">
            <summary>
            流程
            </summary>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetBillFlow``1(``0,System.Boolean,System.Int32[])">
            <summary>
            根据表单内容生成审批流程，返回生成结果
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <param name="refresh">是否重新生成流程</param>
            <param name="orgIds">组织机构（为空时取表单中的OrgId）</param>
            <returns>item1为是否成功，item2为错误消息</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetBillFlowNodeForBack(System.Int32,System.Boolean,GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            审批退回到某一节点，获取前面的所有节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowNextAction(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ************处理审批流程动作(总入口)************
            </summary>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.CheckBillFlowNodeIsChecked(System.Int32,GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            验证流程待审批节点中当前用户是否审批
            </summary>
            <param name="billFlowId">流程Id</param>
            <param name="billFlow">流程对象</param>
            <returns>true:是未审批，false:是错误</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.CheckThisBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            检测流程数据的合法性
            </summary>
            <param name="billFlow"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowAgreeAction(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程--1 同意下一步
            </summary>
            <param name="bf">流程</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowAutoFinishAction(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程 自动审批
            （当前流程审批组中模式为 
            1.全部通过审批的
            2.maxdays有限时审批的，
            3.option 为0
            没有特殊操作的 才会自动审批）
            </summary>
            <param name="bf"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowInvalidAction(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程--2 作废
            </summary>
            <param name="bf">流程数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowBackAction(GLXT.Spark.Entity.XTGL.BillFlow,System.Int32)">
            <summary>
            流程 3--退回到节点
            </summary>
            <param name="group">退回到的节点group值</param>
            <param name="bf">流程数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowBackToCreate(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程 4--退回到制单
            </summary>
            <param name="bf">流程数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.BillFlowRevoke(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程 5-- 撤销
            </summary>
            <param name="bf"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.CheckBillFlowRevoke(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程 5-- 撤销 判断是否能撤销
            </summary>
            <param name="bf"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetBillFlowById(System.Int32)">
            <summary>
            根据单据billFlowId查找 流程数据
            </summary>
            <param name="billFlowId">单据表中 billFlowId</param>
            <returns>BillFlow</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetBillFlowByBillId(System.Int32,System.Int32)">
            <summary>
            根据单据billId查找 流程数据
            </summary>
            <param name="billId">单据表中 Id</param>
            <param name="formId">单据表中 formId</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetBillFlow``1(``0,System.Boolean,System.Int32[],System.Collections.Generic.KeyValuePair{System.Int32,System.Int32[]}[])">
            <summary>
            根据表单内容生成审批流程（可定义不同状态分属不同组织机构），返回生成结果
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <param name="refresh">是否重新生成流程</param>
            <param name="orgIds">组织机构</param>
            <param name="stateOrgs">单据状态及对应组织机构列表</param>
            <returns>item1为是否成功，item2为错误消息</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetRolePersonList(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.UserCheckupOrganization},System.Int32,System.Int32)">
            <summary>
            根据角色及组织机构，获取对应的可审核人员
            </summary>
            <param name="ucoList">所有角色及人员列表</param>
            <param name="roleId">角色Id</param>
            <param name="orgId">组织机构Id</param>
            <returns>人员列表</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetFlowId``1(``0)">
            <summary>
            根据表单数据返回对应的流程Id
            </summary>
            <typeparam name="T">表单类型</typeparam>
            <param name="billObj">表单数据</param>
            <returns>流程Id</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.CheckCondition``1(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.FlowCondition},System.Int32,``0,System.String)">
            <summary>
            流程条件匹配
            </summary>
            <param name="conditionList">当前流程所有匹配条件</param>
            <param name="PCode">父节点</param>
            <param name="billObj">表单数据</param>
            <param name="logicOperator">逻辑运算符</param>
            <returns>bool</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetFieldVelue``1(``0,System.String)">
            <summary>
            查询对象的某一属性值
            </summary>
            <param name="billObj">对象</param>
            <param name="field">属性（可查询级联属性，如Organization.Name）</param>
            <returns>属性值</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.CheckBillFlow(GLXT.Spark.Entity.XTGL.BillFlow,System.String@)">
            <summary>
            检验流程中人员是否完整
            </summary>
            <param name="billFlow"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.SaveBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            流程保存
            </summary>
            <param name="billFlow">流程对象</param>
            <returns>流程对象</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.AddBillFlowNodeInTheFormState(System.Int32[],GLXT.Spark.Entity.XTGL.BillFlowNode)">
            <summary>
            向某一个流程中的 流程状态节点中 批量添加审核人
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.SubmitBillFlow(GLXT.Spark.Entity.XTGL.BillFlow)">
            <summary>
            提交流程
            </summary>
            <param name="billFlow">流程对象</param>
            <returns>BillFlow</returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetAttitudeByBillId(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据单据Id获取审批记录列表
            </summary>
            <param name="billId">单据Id</param>
            <param name="formId">表单Id</param>
            <param name="type">记录类型。1：审批记录类型 2：其他记录类型</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.AddAttitude(GLXT.Spark.Entity.XTGL.Attitude)">
            <summary>
            添加审批意见（调用这个方法必须用事务）
            </summary>
            <param name="attitude">审批表单对象</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetFieldTypeList">
            <summary>
            返回字段类型及可用的操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.BillFlowService.GetFormState(System.String,System.Int32)">
            <summary>
            根据表单名获取表单状态
            </summary>
            <param name="TableName">表单名</param>
            <param name="DefaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GenerateUserNumber">
            <summary>
            人员信息生成工号
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GetPersonListByOrgId(System.Int32,System.Int32,System.String)">
            <summary>
            查询对应组织机构下的人员组成
            </summary>
            <param name="orgId"></param>
            <param name="postId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GetPersonOrgIds(System.Int32,System.String)">
            <summary>
            根据人员信息查询对应的组织机构
            </summary>
            <param name="postId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GetPostListByOrgId(System.Int32)">
            <summary>
            查询对应组织机构下的岗位
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GetOtherPersonPostById(System.Int32)">
            <summary>
            根据人员id查询其他岗位信息（不包括主岗位）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.CommonService.GetCachePersonBasicInfoList(System.Int32)">
            <summary>
            查询并缓存人员基本信息
            </summary>
            <param name="companyId">公司Id</param>
            <returns>List</returns>
        </member>
        <member name="T:GLXT.Spark.Service.PersonService">
            <summary>
            人事管理
            </summary>
        </member>
        <member name="T:GLXT.Spark.Service.SystemService">
            <summary>
            系统管理
            </summary>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetRole(System.Nullable{System.Int32},System.String)">
            <summary>
            获取 所有角色
            </summary>
            <param name="roleId">角色id</param>
            <param name="name">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.IsAuth(System.String)">
            <summary>
            判断当前用户是否有某项权限
            </summary>
            <param name="permitCode"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetUserOrgChildList(System.Int32)">
            <summary>
            获取用户，数据范围下面，勾选节点下面的所有子节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgWithChildren(System.Int32[])">
            <summary>
            根据Id查询组织机构（包含所有子节点）
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetComOrgWithChildren(System.Int32,System.Int32[])">
            <summary>
            根据Id查询指定公司下的组织机构
            </summary>
            <param name="companyId">公司Id</param>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgWithProject(System.Int32)">
            <summary>
            对应公司下项目所对应的组织机构（不包括项目）
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgWithParents(System.Int32[])">
            <summary>
            根据Id查询组织机构（包含所有父节点）
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgWithParents(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.Organization},System.Int32[])">
            <summary>
            给定组织机构中根据Id查询（包含所有父节点）
            </summary>
            <param name="orgLists">给定组织机构列表</param>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgWithChildrenIds(System.Int32[])">
            <summary>
            根据子节点Ids找到所有根节点
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgRootToParent(System.Int32[])">
            <summary>
            根据子节点Ids找到所有根节点对应的组织机构
            </summary>
            <param name="ids">组织机构Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgStringByLeafNode(System.Int32)">
            <summary>
            根据子节点Id找到所有父节点字符串 例：公司/部门/人事部/员工
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetOrgIsSumByPId(System.Int32)">
            <summary>
            根据当前组织机构父节点ID获取统计余额的父节点组织机构
            </summary>
            <param name="orgPId"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetSumOrgList(System.Collections.Generic.List{GLXT.Spark.Entity.XTGL.Organization},System.Int32)">
            <summary>
            获取统计余额的组织机构子集
            </summary>
            <param name="orgList">组织机构</param>
            <param name="orgId">父ID</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetWithChildren``1(System.Collections.Generic.List{``0},System.Int32[])">
            <summary>
            查询Id数组中所有节点及子节点
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="list">树形全集，必须包含（Id，PId属性）</param>
            <param name="Ids">节点Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetWithParents``1(System.Collections.Generic.List{``0},System.Int32[])">
            <summary>
            查询Id数组中所有节点及父节点
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="list">树形全集，必须包含（Id，PId属性）</param>
            <param name="Ids">节点Id集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetDictionary(System.String)">
            <summary>
            更具类型获取字典数据
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetDictionaryWithChildren(System.String,System.Int32[])">
            <summary>
            返回字典中指定值下的所有子项（用户当前公司）
            </summary>
            <param name="type">字典类型</param>
            <param name="values">值的集合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetDictionaryWithName(System.String,System.Int32)">
            <summary>
            返回字典数据中指定类型下所对应值的名称
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetDictionariesWithoutValues(System.Int32[],System.String)">
            <summary>
            根据类型名称获取类型数据
            含有筛选项的排除
            </summary>
            <param name="values">筛选value值</param>
            <param name="type">类型名称</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Service.SystemService.GetNewBillNumber``1(System.String,System.Int32)">
            <summary>
            生成单据编号
            </summary>
            <typeparam name="T">单据类型</typeparam>
            <param name="str">编号前缀</param>
            <param name="lenght">流水号长度</param>
            <returns>单据编号</returns>
        </member>
        <member name="T:GLXT.Spark.Utils.Captcha">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateNumberVerifyCode(System.Int32)">
            <summary>
            1.数字验证码
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateAbcVerifyCode(System.Int32)">
            <summary>
            2.字母验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateMixVerifyCode(System.Int32)">
            <summary>
            3.混合验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateVerifyCode(GLXT.Spark.Utils.Captcha.VerifyCodeType)">
            <summary>
            产生验证码（随机产生4-6位）
            </summary>
            <param name="type">验证码类型：数字，字符，符合</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateBitmapByImgVerifyCode(System.String,System.Int32,System.Int32)">
            <summary>
            验证码图片 => Bitmap
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Captcha.CreateByteByImgVerifyCode(System.String,System.Int32,System.Int32)">
            <summary>
            验证码图片 => byte[]
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.ClassExtension.GetAttributeValue``2(System.Type,System.Func{``0,``1})">
            <summary>
            查询读取类上的属性值
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="type"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.ClassExtension.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            按关键字去除重复
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetMD5(System.String)">
            <summary>
            生成MD5加密字串
            </summary>
            <param name="str">输入字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetEncryptPassword(System.String)">
            <summary>
            对密码进行加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:GLXT.Spark.Utils.Common.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:GLXT.Spark.Utils.Common.UpLoadSingleFile(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String,System.String)">
            <summary>
            上传单个文件
            </summary>
            <param name="formFile">文件流</param>
            <param name="dirName">上传到的目录名称</param>
            <param name="dirPath">文件磁盘路径</param>
            <param name="newName">新名称</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetDouble(System.Object)">
            <summary>
            返回Double类型数据(若不能转换成double类型返回0)
            </summary>
            <param name="number">要转换的数据</param>
            <returns>double</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetInt(System.Object)">
            <summary>
            返回Int类型数据(若不能转换成Int类型返回0)
            </summary>
            <param name="number">要转换的数据</param>
            <returns>int</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetStrRate(System.Object,System.Object)">
            <summary>
            返回两个数字相除后的百分比
            </summary>
            <param name="number1">分子数据</param>
            <param name="number2">分母数据</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetDate(System.Object)">
            <summary>
            返回DateTime类型数据（若不能转换，返回当前日期）
            </summary>
            <param name="date">要转换的数据</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.IsEquals(System.Object,System.Object)">
            <summary>
            判断两个对象是否相等(包含null)
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetPropertyValue``2(``0,System.String)">
            <summary>
            获取对象的属性值（已知对象类型时效率高）
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="TValue">属性类型</typeparam>
            <param name="billObj">对象数据</param>
            <param name="propName">属性名称</param>
            <returns>属性值</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetPropertyValue``1(System.Object,System.String)">
            <summary>
            获取对象的属性值（未知对象类型）
            </summary>
            <typeparam name="TValue">属性类型</typeparam>
            <param name="billObj">对象数据</param>
            <param name="propName">属性名称</param>
            <returns>属性值</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.SetPropertyValue``1(``0,System.String,System.Object)">
            <summary>
            设置对象的属性值（已知对象类型时效率高）
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="billObj">对象数据</param>
            <param name="propName">属性名称</param>
            <param name="propValue">属性值</param>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置对象的属性值（未知对象类型）
            </summary>
            <param name="billObj">对象数据</param>
            <param name="propName">属性名称</param>
            <param name="propValue">属性值</param>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetTableName``1">
            <summary>
            获取 注解 TableAttribute 中的 name(获取实体类中映射的数据库中的表名)
            </summary>
            <typeparam name="T">类</typeparam>
            <returns>表名</returns>
        </member>
        <member name="M:GLXT.Spark.Utils.Common.GetTableName(System.String)">
            <summary>
            根据类名获取表名
            </summary>
            <param name="className">命名空间+类名</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.EnumHelp.GetEnumName``1(System.Int32)">
            <summary>
            根据枚举的值获取枚举名称
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">枚举的值</param>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.EnumHelp.GetNamesArr``1">
            <summary>
            获取枚举名称集合
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.EnumHelp.getEnumDic``1">
            <summary>
            将枚举转换成字典集合
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:GLXT.Spark.Utils.EnumHelp.GetDic``1">
            <summary>
            将枚举转换成字典
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="P:GLXT.Spark.ViewModel.GGGL.AdvertisementSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.GGGL.AdvertisementSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.GGGL.AdvertisementSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.GGGL.AdvertisementSearchViewModel.types">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.AcitivitySearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.AcitivitySearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.AcitivitySearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.AcitivitySearchViewModel.types">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.MatchSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.MatchSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.MatchSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.HDGL.MatchSearchViewModel.types">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel">
            <summary>
            监控搜索项
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.JKGL.MonitorSearchViewModel.ipAddress">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel">
            <summary>
            访客搜索项
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.tel">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.carNum">
            <summary>
            车牌
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.receivor">
            <summary>
            接待人
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.date1">
            <summary>
            进入时间起
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.QYGL.VisitorSearchViewModel.date2">
            <summary>
            进入时间止
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel.orgIds">
            <summary>
            部门组
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel.postId">
            <summary>
            岗位Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel.categoryIds">
            <summary>
            类别组
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.OrganizationSearchViewModel.isProject">
            <summary>
            是否项目
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonOrganizationViewModel.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Id">
            <summary>
            id号
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Number">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.OrganizationId">
            <summary>
            组织机构id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.PostId">
            <summary>
            所属岗位
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.IDType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.IDNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.PhoneNumber">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.IDAddress">
            <summary>
            身份证住址
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.HomeAddres">
            <summary>
            家庭住址
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.BirthDate">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.AWBank">
            <summary>
            int:开户行
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Account">
            <summary>
            string:开户帐户
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.ConfirmAccountUserName">
            <summary>
            string:帐号确认人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.ConfirmAccountDate">
            <summary>
            DateTime:帐号确认日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.PersonTypeID">
            <summary>
            人员类型ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.InUse">
            <summary>
            是否可用（1、可用；0、禁用）
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.IsUser">
            <summary>
            是否用户 1.是 0 不是
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.ExpirationDate">
            <summary>
            过期日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.DisableMsg">
            <summary>
            不能登录原因
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.CreateUserId">
            <summary>
            制单人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.CreateUserName">
            <summary>
            制单人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.CreateDate">
            <summary>
            制单日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.LastEditUserId">
            <summary>
            更新人Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.LastEditUserName">
            <summary>
            更新人姓名
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.Person.PersonViewModel.LastEditDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.Id">
            <summary>
            int:主键ID
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.CompanyId">
            <summary>
            int:公司Id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.Name">
            <summary>
            string：名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.OrgName">
            <summary>
            int:适用范围（组织机构ID）
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.Category">
            <summary>
            string:类别
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostPoolListViewModel.InUse">
            <summary>
            是否使用（）
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostSearchViewModel.name">
            <summary>
            岗位名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostSearchViewModel.postSequenceIds">
            <summary>
            岗位序列组
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.RSGL.PostSearchViewModel.bussinessLineIds">
            <summary>
            所属条线组
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.XTGL.CheckAmountViewModel">
            <summary>
            带金额审批
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.XTGL.CheckFileViewModel">
            <summary>
            上传附件的审批视图
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.XTGL.CheckFileViewModel.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.XTGL.CheckFileViewModel.fileList">
            <summary>
            附件
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.XTGL.CheckFileViewModel.attitude">
            <summary>
            审批信息
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.XTGL.CheckViewModel">
            <summary>
            常规审批
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.XTGL.CheckViewModel.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.XTGL.CheckViewModel.attitude">
            <summary>
            审批信息
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel">
            <summary>
            资讯搜索项
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel.keyName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.BussinessInformationSearchViewModel.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel">
            <summary>
            合同搜索项
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.isForever">
            <summary>
            是否永久
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.date1">
            <summary>
            日期起
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.ContractSearchViewModel.date2">
            <summary>
            日期止
            </summary>
        </member>
        <member name="T:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel">
            <summary>
            意向企业搜索项
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.currentPage">
            <summary>
            当前页面
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.pageSize">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.operationStates">
            <summary>
            经营状态
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.amount1">
            <summary>
            注册资本起
            </summary>
        </member>
        <member name="P:GLXT.Spark.ViewModel.ZSGL.EnterpriseSearchViewModel.amount2">
            <summary>
            注册资本止
            </summary>
        </member>
    </members>
</doc>
